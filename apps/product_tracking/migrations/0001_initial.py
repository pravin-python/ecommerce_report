# Generated by Django 4.2.9 on 2025-06-12 13:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('barcode', models.CharField(blank=True, max_length=25, null=True)),
                ('brand_id', models.BigIntegerField(blank=True, null=True)),
                ('category_id', models.BigIntegerField(blank=True, null=True)),
                ('food_category', models.CharField(blank=True, choices=[('solid', 'Solid'), ('liquid', 'Liquid'), ('exempted', 'Exempted')], max_length=10, null=True)),
                ('exempted_reason', models.CharField(blank=True, choices=[('Natural form/Pure form', 'Natural form/Pure form'), ('Liquor', 'Liquor'), ('Herbs and Medicine without sugar', 'Herbs and Medicine without sugar'), ('Other', 'Other')], max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('company_id', models.BigIntegerField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.CharField(blank=True, choices=[('vg', 'Vegetarian'), ('nvg', 'Non-Vegetarian'), ('vgn', 'Vegan')], max_length=3, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('nutrients', models.TextField(blank=True, null=True)),
                ('allergens', models.TextField(blank=True, null=True)),
                ('tag_1', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_2', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_3', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_4', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_5', models.CharField(blank=True, max_length=255, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('score_in', models.SmallIntegerField(blank=True, null=True)),
                ('grade_in', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1, null=True)),
                ('serving_size_scores', models.JSONField(blank=True, null=True)),
                ('package_type', models.CharField(blank=True, max_length=255, null=True)),
                ('net_weight', models.CharField(blank=True, max_length=25, null=True)),
                ('gross_weight', models.CharField(blank=True, max_length=15, null=True)),
                ('net_content', models.CharField(blank=True, max_length=255, null=True)),
                ('mass_measurement_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('fssai_lic', models.TextField(blank=True, null=True)),
                ('country_of_origin', models.TextField(blank=True, null=True)),
                ('processing_level', models.CharField(blank=True, choices=[('Unprocessed or Natural foods and Minimally Processed', 'Unprocessed or Natural foods and Minimally Processed'), ('Processed Culinary Ingredients', 'Processed Culinary Ingredients'), ('Processed foods', 'Processed foods'), ('Ultra-processed foods', 'Ultra-processed foods')], max_length=100, null=True)),
                ('status', models.CharField(choices=[('raw', 'Raw'), ('enable', 'Enable'), ('disable', 'Disable'), ('deficient', 'Deficient'), ('exempted', 'Exempted')], default='raw', max_length=10)),
                ('sync_status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('synced_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
    ]
